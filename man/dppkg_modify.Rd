% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dppkg_modify.R
\name{dppkg_modify}
\alias{dppkg_modify}
\title{R package version update}
\usage{
dppkg_modify(
  project_path = ".",
  pkg_name,
  pkg_version = character(0),
  pkg_sha = character(0),
  repo_name = "RSPM",
  repo_url,
  force_repo_overwrite = F,
  verbose = T
)
}
\arguments{
\item{project_path}{path to the project}

\item{pkg_name}{name of the package to be added or updated}

\item{pkg_version}{pkg version, if not provided, tries to retrieve the latest
from RSPM}

\item{pkg_sha}{sha as recorded on the repository. tries to
retrieve the latest from RSPM}

\item{repo_name}{by default RSPM}

\item{repo_url}{url corresponding to the repo where the package is}

\item{force_repo_overwrite}{T/F. Use with caution. Changing this, will change
the url corresponding to the repo name/alias universally and may break the
lock file}

\item{verbose}{T/F}
}
\value{
the update renv.lock JSON as a list
}
\description{
Modifies R package records of \code{renv} for this project
}
\details{
This is primarily intended to enable updating package that are
not on CRAN or GitHub (e.g. RSPM packages). \code{renv::update} can update when
packages are on CRAN or GitHub. However as core packages of \code{DaaPR} are
internal, this helper function is currently needed. Note, currently update
to packages from git are not supported. To update DaaPR elements, set install
options to RSPM \verb{options(repos = <RSPM URL>)} Update DaaPR > run this
function to update all DaaPR packages on renv.lock > Delete \code{renv} folder >
run \code{renv::restore()} > Follow subsequent steps.
}
\examples{
\dontrun{
dppkg_modify(
  project_path = ".", pkg_name = "dpdeploy",
  pkg_version = "0.0.0.9008",
  pkg_sha = "3e9544b7ea42f683647df5a4e21238ae7194b580", verbose = T
)
}
}
