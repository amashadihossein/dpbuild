% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{readme_get}
\alias{readme_get}
\title{Get Readme to be appended to the data object}
\usage{
readme_get(d, general_note)
}
\arguments{
\item{d}{data object}

\item{general_note}{a character string to be added to general notes for this data object branch/commit}
}
\value{
readme text
}
\description{
This function builds readme metadata
}
\details{
#' @title Get Pins Version Pre Deploy
#' @description  This get the pins version pre-deploy
#' @param d data object
#' @param pin_name what the pin will be named. For data products, it is encoded in dp_param
#' @param pin_description what the pin description will be. For data products, it is encoded in dp_params
#' @return a character version
#' @importFrom dplyr .data
#' @keywords internal
get_pin_version <- function(d, pin_name, pin_description) {
pin_name <- as.character(pin_name)
pin_description <- as.character(pin_description)

pins::board_register_local(name = "daap_internal", version = T)

pins::pin_delete(names = pin_name, board = "daap_internal")
pins::pin_write(
x = d,
name = pin_name,
board = "daap_internal",
description = pin_description
)

pin_version <- pins::pin_versions(
name = pin_name,
board = "daap_internal",
full = F
) \%>\% dplyr::pull(.data$version)
pins::pin_delete(names = pin_name, board = "daap_internal")

return(pin_version)
}
}
