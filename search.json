[{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://amashadihossein.github.io/dpbuild/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2021 Afshin Mashadi-Hossein  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. dpbuild Copyright (C) 2021 Afshin Mashadi-Hossein This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://amashadihossein.github.io/dpbuild/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Afshin Mashadi-Hossein. Author, maintainer.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mashadi-Hossein (2024). dpbuild: package manage building data products. R package version 0.2.0.","code":"@Manual{,   title = {dpbuild: A package to manage building of data products},   author = {Afshin Mashadi-Hossein},   year = {2024},   note = {R package version 0.2.0}, }"},{"path":"https://amashadihossein.github.io/dpbuild/index.html","id":"dpbuild","dir":"","previous_headings":"","what":"A package to manage building of data products","title":"A package to manage building of data products","text":"goal dpbuild streamline process building data product.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A package to manage building of data products","text":"released version dev version","code":"remotes::install_github(\"amashadihossein/dpbuild\") remotes::install_github(\"amashadihossein/dpbuild\", ref = \"dev\")"},{"path":"https://amashadihossein.github.io/dpbuild/index.html","id":"related-documentation","dir":"","previous_headings":"","what":"Related documentation","title":"A package to manage building of data products","text":"daapr: https://amashadihossein.github.io/daapr/ dpdeploy: https://amashadihossein.github.io/dpdeploy/ dpi: https://amashadihossein.github.io/dpi/","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/add_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add readme to the project — add_readme","title":"Add readme to the project — add_readme","text":"Add readme project","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/add_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add readme to the project — add_readme","text":"","code":"add_readme(   project_path,   dp_title,   github_repo_url,   board_params_set_dried,   creds_set_dried )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/add_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add readme to the project — add_readme","text":"project_path Path project folder dp_title readme title github_repo_url github repo url board_params_set_dried Character representation function setting board_params. Use fn_dry() combination board_params_set_s3(), board_params_set_labkey(), board_params_set_local(). creds_set_dried Character representation function setting creds. Use fn_dry() combination creds_set_aws() creds_set_labkey().","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/check_pins_compatibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Check pins package compatibility — check_pins_compatibility","title":"Check pins package compatibility — check_pins_compatibility","text":"Check pins package compatibility","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/check_pins_compatibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check pins package compatibility — check_pins_compatibility","text":"","code":"check_pins_compatibility()"},{"path":"https://amashadihossein.github.io/dpbuild/reference/check_pins_compatibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check pins package compatibility — check_pins_compatibility","text":"is_legacy boolean variable indicate pins version legacy one","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_build.html","id":null,"dir":"Reference","previous_headings":"","what":"Build directory tree — dirTree_build","title":"Build directory tree — dirTree_build","text":"Receives flattened directory tree dirTree_flatten appends metadata tibble element","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build directory tree — dirTree_build","text":"","code":"dirTree_build(flattened_dirTree)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build directory tree — dirTree_build","text":"flattened_dirTree call dirTree_flatten","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build directory tree — dirTree_build","text":"dirTree similar output dirTree_flatten element enriched tidy metadata including sha1 original path data","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"flatten a directory tree — dirTree_flatten","title":"flatten a directory tree — dirTree_flatten","text":"recursively traverses list dir_process flattens list read data capturing structure path name","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"flatten a directory tree — dirTree_flatten","text":"","code":"dirTree_flatten(read_files)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"flatten a directory tree — dirTree_flatten","text":"read_files call dir_process","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dirTree_flatten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"flatten a directory tree — dirTree_flatten","text":"one level deep list data tables name element capture folder structure info","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_ls_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tidy directory list — dir_ls_tidy","title":"Get tidy directory list — dir_ls_tidy","text":"Given directory returns directory list custom tidy tibble","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_ls_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tidy directory list — dir_ls_tidy","text":"","code":"dir_ls_tidy(current_dir)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_ls_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tidy directory list — dir_ls_tidy","text":"current_dir path current directory","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_ls_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tidy directory list — dir_ls_tidy","text":"ls_tidy tibble","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process current input directory — dir_process","title":"Process current input directory — dir_process","text":"Recursively reads hashes content current directory returning content list matches structure directory","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process current input directory — dir_process","text":"","code":"dir_process(current_dir, junk_path = character(0))"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process current input directory — dir_process","text":"current_dir path current directory junk_path path dropped path prefix prevents repeating capture folder structure already captured","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process current input directory — dir_process","text":"read_files list read contents","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a zip directory — dir_process_zip","title":"Process a zip directory — dir_process_zip","text":"function simply extends functionality dir_process zipped directories. unzips temp directory unzipped calls dir_process","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a zip directory — dir_process_zip","text":"","code":"dir_process_zip(zip_dir)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a zip directory — dir_process_zip","text":"zip_dir path zipped directory","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dir_process_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a zip directory — dir_process_zip","text":"read_files list read contents","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_activate.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate data product project — dp_activate","title":"Activate data product project — dp_activate","text":"Activates renv sandbox sets path project path","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_activate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate data product project — dp_activate","text":"","code":"dp_activate(project_path = .)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_activate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate data product project — dp_activate","text":"project_path path project folder","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_clone.html","id":null,"dir":"Reference","previous_headings":"","what":"Clone data product project from a remote repo — dp_clone","title":"Clone data product project from a remote repo — dp_clone","text":"command clones data product project remote repo","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_clone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clone data product project from a remote repo — dp_clone","text":"","code":"dp_clone(remote_url, branch, verbose = F)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_clone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clone data product project from a remote repo — dp_clone","text":"remote_url url like https://github.com/teamAccount//dp_test1.git branch branch name data product (repo) verbose T/F TRUE, 'll show cloning progress","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_clone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clone data product project from a remote repo — dp_clone","text":"TRUE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_clone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clone data product project from a remote repo — dp_clone","text":"","code":"if (FALSE) { Sys.setenv(\"GITHUB_PAT\" = keyring::key_get(\"GITHUB_PAT\")) dp_clone(   remote_url = \"https://github.com/teamAccount/me/dp_test1.git\",   branch = us001 ) }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_commit.html","id":null,"dir":"Reference","previous_headings":"","what":"Commit data product — dp_commit","title":"Commit data product — dp_commit","text":"Runs number checks commits data product changes","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_commit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Commit data product — dp_commit","text":"","code":"dp_commit(project_path = fs::path_wd(), commit_description)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_commit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Commit data product — dp_commit","text":"project_path Path project folder (default working directory) commit_description Commit message","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_commit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Commit data product — dp_commit","text":"repo object post commit","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_commit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Commit data product — dp_commit","text":"","code":"if (FALSE) { dp_commit(commit_description = \"First dp commit\") }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_git_init.html","id":null,"dir":"Reference","previous_headings":"","what":"dp git initialization — dp_git_init","title":"dp git initialization — dp_git_init","text":"Initializes git repo according requirements dp","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_git_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dp git initialization — dp_git_init","text":"","code":"dp_git_init(   project_path,   project_name,   branch_name,   github_repo_url,   board_params_set_dried,   creds_set_dried,   git_ignore )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_git_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dp git initialization — dp_git_init","text":"project_path Path project folder project_name name project. typically name folder project set branch_name abbreviation capture specific reason data processed. Example m3cut (month 3 data cut) github_repo_url https url github repo board_params_set_dried Character representation function setting board_params. Use fn_dry() combination board_params_set_s3(), board_params_set_labkey(), board_params_set_local(). creds_set_dried Character representation function setting creds. Use fn_dry() combination creds_set_aws() creds_set_labkey(). git_ignore character vector files directories ignored git.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize data product project — dp_init","title":"Initialize data product project — dp_init","text":"Initializes data product project creates local data product folder","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize data product project — dp_init","text":"","code":"dp_init(   project_path = fs::path_wd(),   project_description,   branch_name,   branch_description,   readme_general_note = character(0),   board_params_set_dried,   creds_set_dried,   github_repo_url,   git_ignore = c(\".drake/\", \"_targets/\", \"*_files/\", \".Rprofile\", \".Renviron\",     \".Rhistory\", \".Rapp.history\", \".Rproj.user\", \".Rproj.user/\", \".DS_Store\", \"*.csv\",     \"*.tsv\", \"*.rds\", \"*.txt\", \"*.parquet\", \"*.sas7bdat\", \".RData\", \".RDataTmp\",     \"*.html\", \"*.png\", \"*.pdf\", \".vscode/\", \"rsconnect/\", \"*_cache/\"),   ... )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize data product project — dp_init","text":"project_path path project folder. folder name used project name. path exist created. project_description high level description project. Example: integrated, clinical translational data study x. branch_name abbreviation capture specific reason data processed. Example m3cut (month 3 data cut) branch_description high level description branch readme_general_note Optional general note added metadata data object board_params_set_dried Character representation function setting board_params. Use fn_dry() combination board_params_set_s3(), board_params_set_labkey(), board_params_set_local(). creds_set_dried using local_board, ignored need specified. Otherwise,character representation function setting creds. Use fn_dry() combination creds_set_aws creds_set_labkey. NOTE: never directly pass credentials script! Use Sys.getenv(). See example github_repo_url https url github repo git_ignore character vector files directories ignored git. ... metadata captured config file","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize data product project — dp_init","text":"project path","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize data product project — dp_init","text":"function create local git-tracked data product repository, write data product configuration details .daap/daap_config.yaml, initialize renv project, commit changes.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize data product project — dp_init","text":"","code":"if (FALSE) { # Dry function call to setting board_params board_params_set_dried <-   fn_dry(dpi::board_params_set_s3(     bucket_name = \"bucket_name\",     region = \"us-east-1\"   ))  # Dry function call to setting credentials creds_set_dried <-   fn_dry(dpi::creds_set_aws(     key = Sys.getenv(\"AWS_KEY\"),     secret = Sys.getenv(\"AWS_SECRET\")   ))  # Initialize dp repo dp_repo <- dp_init(   project_path = \"dp_test\",   project_description = \"Test data product\",   branch_name = \"us001\",   branch_description = \"User story 1\",   readme_general_note = \"This data object is generated for testing purposes\",   board_params_set_dried = board_params_set_dried,   creds_set_dried = creds_set_dried,   github_repo_url = \"https://github.com/teamAccount/me/dp_test.git\" ) }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_pull.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull data product from a remote repo — dp_pull","title":"Pull data product from a remote repo — dp_pull","text":"command pulls data product remote repo","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_pull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull data product from a remote repo — dp_pull","text":"","code":"dp_pull(project_path = fs::path_wd())"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_pull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull data product from a remote repo — dp_pull","text":"project_path Path project folder (default working directory)","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_pull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull data product from a remote repo — dp_pull","text":"TRUE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_pull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull data product from a remote repo — dp_pull","text":"","code":"if (FALSE) { Sys.setenv(\"GITHUB_PAT\" = keyring::key_get(\"GITHUB_PAT\")) dp_pull() }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_push.html","id":null,"dir":"Reference","previous_headings":"","what":"Push data product to remote repo — dp_push","title":"Push data product to remote repo — dp_push","text":"command pushes data product remote","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_push.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push data product to remote repo — dp_push","text":"","code":"dp_push(   project_path = \".\",   remote_alias = character(0),   remote_url = character(0) )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_push.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push data product to remote repo — dp_push","text":"project_path path dp_project (default current directory) remote_alias use overwrite default alias, default remote alias configured (e.g. legacy). remote_url use overwrite default URL, default remote URL configured (e.g. legacy).","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_push.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Push data product to remote repo — dp_push","text":"TRUE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_push.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Push data product to remote repo — dp_push","text":"","code":"if (FALSE) { dp_push(project_path = \".\") }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_repository_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check dp repository — dp_repository_check","title":"Check dp repository — dp_repository_check","text":"Runs number checks returns list T/F per check","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_repository_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check dp repository — dp_repository_check","text":"","code":"dp_repository_check(path)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_repository_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check dp repository — dp_repository_check","text":"path Path evaluated","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_repository_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check dp repository — dp_repository_check","text":"list T/F per check","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure a data product — dp_structure","title":"Structure a data product — dp_structure","text":"function assembles data product properly assigns class attributes. examples, use dpbuild::dpcode_add generate dp_make.R file","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Structure a data product — dp_structure","text":"","code":"dp_structure(data_files_read, config, output = list(), metadata = list())"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Structure a data product — dp_structure","text":"data_files_read object generated dpbuild::dpinput_read() containing links input data config data product config file dpbuild::dpconf_get output list content structured output metadata list content structured metadata","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Structure a data product — dp_structure","text":"list containing README, raw_input, input, output","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_tolink.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a data product to a link — dp_tolink","title":"Converts a data product to a link — dp_tolink","text":"Given name version data product, return custom function retrieving data product","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_tolink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a data product to a link — dp_tolink","text":"","code":"dp_tolink(dp_name, dp_version)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_tolink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a data product to a link — dp_tolink","text":"dp_name name data product dp_version version data product","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_tolink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a data product to a link — dp_tolink","text":"","code":"if (FALSE) { dp_cars_lnk <- dp_tolink(dp_name = \"dp-cars-us001\", dp_version = \"4dc379a\") }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data product — dp_write","title":"Write data product — dp_write","text":"function writes data product logs .daap/daap_log.yaml","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data product — dp_write","text":"","code":"dp_write(data_object, project_path = \".\")"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data product — dp_write","text":"data_object data_object generated dp_structure project_path path project (default current directory)","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dp_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write data product — dp_write","text":"TRUE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpbuild-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dpbuild: A package to manage building of data products — dpbuild-package","title":"dpbuild: A package to manage building of data products — dpbuild-package","text":"R package intended help set manage data product project.","code":""},{"path":[]},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpbuild-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dpbuild: A package to manage building of data products — dpbuild-package","text":"Maintainer: Afshin Mashadi-Hossein amashadihossein@gmail.com (ORCID)","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpcode_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds script templates — dpcode_add","title":"Adds script templates — dpcode_add","text":"Adds dp_make.R dp_journal.RMD dp project repo","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpcode_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds script templates — dpcode_add","text":"","code":"dpcode_add(project_path, use_targets = F)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpcode_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds script templates — dpcode_add","text":"project_path Path project use_targets T/F TRUE, uses targets instead drake (recommended)","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpcode_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds script templates — dpcode_add","text":"repo","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data product config information — dpconf_get","title":"Get data product config information — dpconf_get","text":"Reads data product config file .daap/daap_config.yamland returns config details","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data product config information — dpconf_get","text":"","code":"dpconf_get(project_path)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data product config information — dpconf_get","text":"project_path path project folder","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data product config information — dpconf_get","text":"list dpconf","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data product config information — dpconf_get","text":"function reads yaml config list. process, hydrates expression board_params creds. Make sure environment variables declared dried functions set prior calling dpconf_get.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize daap configuration file — dpconf_init","title":"Initialize daap configuration file — dpconf_init","text":"Initializes daap configuration file .daap/daap_config.yaml","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize daap configuration file — dpconf_init","text":"","code":"dpconf_init(   project_path,   project_name,   project_description = character(0),   branch_name,   branch_description = character(0),   readme_general_note = character(0),   board_params_set_dried,   creds_set_dried,   is_legacy,   ... )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize daap configuration file — dpconf_init","text":"project_path path project folder project_name name project. typically name folder project set project_description high level description project. Example: integrated, clinical translational data study x. branch_name abbreviation capture specific reason data processed. Example m3cut (month 3 data cut) branch_description high level description branch readme_general_note Optional general note added metadata data object board_params_set_dried Character representation function setting board_params. Use fn_dry() combination board_params_set_s3(), board_params_set_labkey(), board_params_set_local(). creds_set_dried Character representation function setting creds. Use fn_dry() combination creds_set_aws() creds_set_labkey(). is_legacy pins version legacy one (Boolean) ... metadata captured config file","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize daap configuration file — dpconf_init","text":"dpconf","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read daap config — dpconf_read","title":"Read daap config — dpconf_read","text":"Read daap_config.yaml","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read daap config — dpconf_read","text":"","code":"dpconf_read(project_path)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read daap config — dpconf_read","text":"project_path path project folder","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read daap config — dpconf_read","text":"list raw dpconf function call remains dry","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify data product configuration — dpconf_update","title":"Modify data product configuration — dpconf_update","text":"Manages modification data product project configuration subsequent initialization via dp_init.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify data product configuration — dpconf_update","text":"","code":"dpconf_update(   project_path = fs::path_wd(),   project_description = character(0),   branch_name = character(0),   branch_description = character(0),   readme_general_note = character(0),   board_params_set_dried = character(0),   creds_set_dried = character(0),   commit_description = \"dp_conf modified\",   git_ignore = character(0),   ... )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify data product configuration — dpconf_update","text":"project_path path project folder. folder name used project name. path exist created. project_description high level description project. Example: integrated, clinical translational data study x. branch_name abbreviation capture specific reason data processed. Example m3cut (month 3 data cut) branch_description high level description branch readme_general_note Optional general note added metadata data object board_params_set_dried Character representation function setting board_params. Use fn_dry() combination board_params_set_s3(), board_params_set_labkey(), board_params_set_local(). creds_set_dried Character representation function setting creds. Use fn_dry() combination creds_set_aws creds_set_labkey(). commit_description character string describes updated. git_ignore character vector files directories added existing list ignored git. ... metadata captured config file","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify data product configuration — dpconf_update","text":"project path","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"validate dpconf — dpconf_validate","title":"validate dpconf — dpconf_validate","text":"function errors invalid conf","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate dpconf — dpconf_validate","text":"","code":"dpconf_validate(dpconf, project_path)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate dpconf — dpconf_validate","text":"dpconf dp config project_path path project","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write daap config — dpconf_write","title":"Write daap config — dpconf_write","text":"Write returns daap config file","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write daap config — dpconf_write","text":"","code":"dpconf_write(project_path, dpconf)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write daap config — dpconf_write","text":"project_path path project folder","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpconf_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write daap config — dpconf_write","text":"list dpconf","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"flatten the read dpinput in the format of dp_map — dpinput_flatten","title":"flatten the read dpinput in the format of dp_map — dpinput_flatten","text":"recursively traverses list dir_process flattens list read data capturing structure path name","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"flatten the read dpinput in the format of dp_map — dpinput_flatten","text":"","code":"dpinput_flatten(read_dpinput0)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"flatten the read dpinput in the format of dp_map — dpinput_flatten","text":"read_dpinput0 call dir_process","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_flatten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"flatten the read dpinput in the format of dp_map — dpinput_flatten","text":"one level deep list data tables name element capture folder structure info","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_make.html","id":null,"dir":"Reference","previous_headings":"","what":"make data product input manifest — dpinput_make","title":"make data product input manifest — dpinput_make","text":"Converts structured input yaml manifest","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make data product input manifest — dpinput_make","text":"","code":"dpinput_make(input_d)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make data product input manifest — dpinput_make","text":"input_d list synced_input elements structured desired within list","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_make.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make data product input manifest — dpinput_make","text":"TRUE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map data input into data product workflow — dpinput_map","title":"Map data input into data product workflow — dpinput_map","text":"helper function help manage context input_files folder","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map data input into data product workflow — dpinput_map","text":"","code":"dpinput_map(project_path)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map data input into data product workflow — dpinput_map","text":"project_path path project","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map data input into data product workflow — dpinput_map","text":"input_map data.frame maps content input_files evaluated","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map0.html","id":null,"dir":"Reference","previous_headings":"","what":"Get input metadata from dpinput manifest — dpinput_map0","title":"Get input metadata from dpinput manifest — dpinput_map0","text":"Build last dpinput .daap/daap_input.yaml","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get input metadata from dpinput manifest — dpinput_map0","text":"","code":"dpinput_map0(project_path = \".\")"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get input metadata from dpinput manifest — dpinput_map0","text":"project_path current project path","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_map0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get input metadata from dpinput manifest — dpinput_map0","text":"input_map0 data.frame maps content already synced input content NULL .daap/daap_input.yaml","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data product input manifest — dpinput_read","title":"Read data product input manifest — dpinput_read","text":"Reads yaml dpinput manifest returns structured pinlink","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data product input manifest — dpinput_read","text":"","code":"dpinput_read(   daap_input_yaml = yaml::read_yaml(file = \"./.daap/daap_input.yaml\"),   add_metadata = F )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data product input manifest — dpinput_read","text":"daap_input_yaml daap_input yaml file imported (default \"./.daap/daap_input.yaml\") add_metadata T/F TRUE dpinput format include metadata","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data product input manifest — dpinput_read","text":"daap_input structured list anonymous functions called retrieves specific data","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_syncflag_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset sync flag in the manifest — dpinput_syncflag_reset","title":"Reset sync flag in the manifest — dpinput_syncflag_reset","text":"updates input_map manifest reverses to_be_synced flag state","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_syncflag_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset sync flag in the manifest — dpinput_syncflag_reset","text":"","code":"dpinput_syncflag_reset(input_map, input_id)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_syncflag_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset sync flag in the manifest — dpinput_syncflag_reset","text":"input_map input_map made dpinput_map input_id vector character strings matching input_mapt$input_manifest$id","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_syncflag_reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset sync flag in the manifest — dpinput_syncflag_reset","text":"modified input_map","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data product input manifest — dpinput_write","title":"Write data product input manifest — dpinput_write","text":"Converts structured input yaml manifest writes .daap/daap_input.yaml","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data product input manifest — dpinput_write","text":"","code":"dpinput_write(project_path, input_d, verbose = F)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data product input manifest — dpinput_write","text":"project_path Project path input_d list generated dpinput_sync synced_input elements structured desired verbose T/F","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinput_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write data product input manifest — dpinput_write","text":"TRUE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinputnames_simplify.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dpinput names simplified — dpinputnames_simplify","title":"Make dpinput names simplified — dpinputnames_simplify","text":"function tries drop full descriptive name dpinput elements code aesthetics","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinputnames_simplify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dpinput names simplified — dpinputnames_simplify","text":"","code":"dpinputnames_simplify(x, make_unique = FALSE)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinputnames_simplify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dpinput names simplified — dpinputnames_simplify","text":"x character string form {path}/{file_name.extension}/{sha1} converted character string form {file_name} make_unique TRUE ensures element vector names end unique. errors simplified names unique.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpinputnames_simplify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dpinput names simplified — dpinputnames_simplify","text":"code friendly converted character string","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dplognote_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get log note from data object — dplognote_get","title":"Get log note from data object — dplognote_get","text":"builds log note","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dplognote_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get log note from data object — dplognote_get","text":"","code":"dplognote_get(data_object, project_path)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dplognote_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get log note from data object — dplognote_get","text":"data_object data_object project_path path project","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dplognote_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get log note from data object — dplognote_get","text":"log_note","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data Product Name — dpname_get","title":"Get Data Product Name — dpname_get","text":"helper function build data product name (.e. pin going called)","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data Product Name — dpname_get","text":"","code":"dpname_get(data_object)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data Product Name — dpname_get","text":"data_object Data Object. anticipates project_name branch_name attributes data object","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data Product Name — dpname_get","text":"dp_name character tagged back attribute data_object","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_make.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Data Product Name — dpname_make","title":"Make Data Product Name — dpname_make","text":"helper function build data product name (.e. pin going called)","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Data Product Name — dpname_make","text":"","code":"dpname_make(project_name, branch_name)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Data Product Name — dpname_make","text":"project_name Project name branch_name Branch name","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dpname_make.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Data Product Name — dpname_make","text":"dp_name character tagged back attribute data_object","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dppkg_modify.html","id":null,"dir":"Reference","previous_headings":"","what":"R package version update — dppkg_modify","title":"R package version update — dppkg_modify","text":"Modifies R package records renv project","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dppkg_modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R package version update — dppkg_modify","text":"","code":"dppkg_modify(   project_path = \".\",   pkg_name,   pkg_version = character(0),   pkg_sha = character(0),   repo_name = \"RSPM\",   repo_url,   force_repo_overwrite = F,   verbose = T )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/dppkg_modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R package version update — dppkg_modify","text":"project_path path project pkg_name name package added updated pkg_version pkg version, provided, tries retrieve latest RSPM pkg_sha sha recorded repository. tries retrieve latest RSPM repo_name default RSPM repo_url url corresponding repo package force_repo_overwrite T/F. Use caution. Changing , change url corresponding repo name/alias universally may break lock file verbose T/F","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dppkg_modify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R package version update — dppkg_modify","text":"update renv.lock JSON list","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dppkg_modify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R package version update — dppkg_modify","text":"primarily intended enable updating package CRAN GitHub (e.g. RSPM packages). renv::update can update packages CRAN GitHub. However core packages DaaPR internal, helper function currently needed. Note, currently update packages git supported. update DaaPR elements, set install options RSPM options(repos = <RSPM URL>) Update DaaPR > run function update DaaPR packages renv.lock > Delete renv folder > run renv::restore() > Follow subsequent steps.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/dppkg_modify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R package version update — dppkg_modify","text":"","code":"if (FALSE) { dppkg_modify(   project_path = \".\", pkg_name = \"dpdeploy\",   pkg_version = \"0.0.0.9008\",   pkg_sha = \"3e9544b7ea42f683647df5a4e21238ae7194b580\", verbose = T ) }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/flname_xos_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets cross OS File Name — flname_xos_get","title":"Gets cross OS File Name — flname_xos_get","text":"drops extension can OS-specific","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/flname_xos_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets cross OS File Name — flname_xos_get","text":"","code":"flname_xos_get(fl, package = \"dpbuild\")"},{"path":"https://amashadihossein.github.io/dpbuild/reference/flname_xos_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets cross OS File Name — flname_xos_get","text":"fl just file name e.g. README.RMD package package name e.g. dpbuild","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_dry.html","id":null,"dir":"Reference","previous_headings":"","what":"Dry a called function — fn_dry","title":"Dry a called function — fn_dry","text":"Make text representation called function call","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_dry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dry a called function — fn_dry","text":"","code":"fn_dry(fn_called)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_dry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dry a called function — fn_dry","text":"fn_called function called","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_dry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dry a called function — fn_dry","text":"character representation called function","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_dry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dry a called function — fn_dry","text":"","code":"if (FALSE) { fn_dry(sum(log(1:10))) }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_hydrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydrate a dried called function — fn_hydrate","title":"Hydrate a dried called function — fn_hydrate","text":"execute returns value function call given textual (dried) representation","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_hydrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydrate a dried called function — fn_hydrate","text":"","code":"fn_hydrate(dried_fn)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_hydrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hydrate a dried called function — fn_hydrate","text":"fn_called function called","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_hydrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hydrate a dried called function — fn_hydrate","text":"value called function given textual representation","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/fn_hydrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hydrate a dried called function — fn_hydrate","text":"","code":"if (FALSE) { fn_hydrate(fn_dry(sum(log(1:10)))) }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_pin_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Pins Version Pre Deploy — get_pin_version","title":"Get Pins Version Pre Deploy — get_pin_version","text":"get pins version pre-deploy","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_pin_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Pins Version Pre Deploy — get_pin_version","text":"","code":"get_pin_version(d, pin_name, pin_description)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_pin_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Pins Version Pre Deploy — get_pin_version","text":"d data object pin_name pin named. data products, encoded dp_param pin_description pin description . data products, encoded dp_params","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_pin_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Pins Version Pre Deploy — get_pin_version","text":"character version","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_rspm_pkgmeta.html","id":null,"dir":"Reference","previous_headings":"","what":"R the latest package metadata on rspm — get_rspm_pkgmeta","title":"R the latest package metadata on rspm — get_rspm_pkgmeta","text":"convenience function hit rspm api get pkg metadata","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_rspm_pkgmeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R the latest package metadata on rspm — get_rspm_pkgmeta","text":"","code":"get_rspm_pkgmeta(pkg_name, rspm_api_url)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_rspm_pkgmeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R the latest package metadata on rspm — get_rspm_pkgmeta","text":"pkg_name character string name package rspm_api_url api endpoint rspm given pkg_name retrieves pkg metadata like latest version, remote_sha, etc.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_rspm_pkgmeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R the latest package metadata on rspm — get_rspm_pkgmeta","text":"pkgmeta containing name, remote_sha, version, checksum, repository","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_rspm_pkgmeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R the latest package metadata on rspm — get_rspm_pkgmeta","text":"primarily intended make dppkg_modify easier work ","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/get_rspm_pkgmeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R the latest package metadata on rspm — get_rspm_pkgmeta","text":"","code":"if (FALSE) { get_rspm_pkgmeta(pkg_name = \"dpi\") }"},{"path":"https://amashadihossein.github.io/dpbuild/reference/inputmap_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean input_map — inputmap_clean","title":"Clean input_map — inputmap_clean","text":"function drops unsynced inputs input map cleans names","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/inputmap_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean input_map — inputmap_clean","text":"","code":"inputmap_clean(input_map, remove_id = character(0), force_cleanname = F)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/inputmap_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean input_map — inputmap_clean","text":"input_map synced mapped object returned dpbuild::dpinput_map remove_id vector input_data ids remove. convenience setting input_manifest field to_be_synced FALSE can achieve thing. default value character(0) limits removal row to_be_synced == FALSE force_cleanname T/F, TRUE ensures input id name ends unique. FALSE, clean names unless names already unique","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/inputmap_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean input_map — inputmap_clean","text":"input_map pruned cleaner names","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/is_valid_dp_repository.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if valid dp repository — is_valid_dp_repository","title":"Determine if valid dp repository — is_valid_dp_repository","text":"Looks path, runs dp_repository_check returns TRUE TRUE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/is_valid_dp_repository.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if valid dp repository — is_valid_dp_repository","text":"","code":"is_valid_dp_repository(   path,   checks = c(\"all\", \"git\", \"dp\", \"renv\", \"branch\"),   verbose = F )"},{"path":"https://amashadihossein.github.io/dpbuild/reference/is_valid_dp_repository.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if valid dp repository — is_valid_dp_repository","text":"path Path evaluated checks combination c(\"\",\"git\",\"dp\",\"renv\",\"branch\"). default . verbose TRUE, print tests passed/failed","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/is_valid_dp_repository.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if valid dp repository — is_valid_dp_repository","text":"TRUE FALSE","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/is_valid_dp_repository.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine if valid dp repository — is_valid_dp_repository","text":"diagnostic tests check validity dp repository run regardless choice checks. Checks determines subset considered return T/F.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_names_codefriendly.html","id":null,"dir":"Reference","previous_headings":"","what":"Make names code friendly — make_names_codefriendly","title":"Make names code friendly — make_names_codefriendly","text":"function tries provide sensible mapping names code friendly version make.names","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_names_codefriendly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make names code friendly — make_names_codefriendly","text":"","code":"make_names_codefriendly(x, make_unique = T)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_names_codefriendly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make names code friendly — make_names_codefriendly","text":"x character string converted make_unique TRUE ensures element vector names end unique","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_names_codefriendly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make names code friendly — make_names_codefriendly","text":"code friendly converted character string","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_pinlink.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Pinlink — make_pinlink","title":"Make Pinlink — make_pinlink","text":"Converts synced input function serves link.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_pinlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Pinlink — make_pinlink","text":"","code":"make_pinlink(synced_input_i)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_pinlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Pinlink — make_pinlink","text":"synced_input_i single pin synced data","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_pinlink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Pinlink — make_pinlink","text":"function receives config returns specific data","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_sha1_compatible.html","id":null,"dir":"Reference","previous_headings":"","what":"Update exotic column classes of data.frames in a list for sha1 signature — make_sha1_compatible","title":"Update exotic column classes of data.frames in a list for sha1 signature — make_sha1_compatible","text":"function used digest::sha1 handle exotic column classes","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_sha1_compatible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update exotic column classes of data.frames in a list for sha1 signature — make_sha1_compatible","text":"","code":"make_sha1_compatible(l)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_sha1_compatible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update exotic column classes of data.frames in a list for sha1 signature — make_sha1_compatible","text":"l list","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/make_sha1_compatible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update exotic column classes of data.frames in a list for sha1 signature — make_sha1_compatible","text":"list","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://amashadihossein.github.io/dpbuild/reference/purge_local_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Purge Local Pins Cache — purge_local_cache","title":"Purge Local Pins Cache — purge_local_cache","text":"completely deletes content local cache. Use care!","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/purge_local_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Purge Local Pins Cache — purge_local_cache","text":"","code":"purge_local_cache(path_cache = pins::board_cache_path())"},{"path":"https://amashadihossein.github.io/dpbuild/reference/purge_local_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purge Local Pins Cache — purge_local_cache","text":"path_cache path pins cache. Default pins::board_cache_path()","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/readme_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Readme to be appended to the data object — readme_get","title":"Get Readme to be appended to the data object — readme_get","text":"function builds readme metadata","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/readme_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Readme to be appended to the data object — readme_get","text":"","code":"readme_get(d, general_note)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/readme_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Readme to be appended to the data object — readme_get","text":"d data object general_note character string added general notes data object branch/commit","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/readme_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Readme to be appended to the data object — readme_get","text":"readme text","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dpi board_params_set_labkey, board_params_set_local, board_params_set_s3, creds_set_aws, creds_set_labkey","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/tbsig_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sha1 signature for a table — tbsig_get","title":"Get sha1 signature for a table — tbsig_get","text":"function wrapper around digest::sha1 handle exotic column classes","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/tbsig_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sha1 signature for a table — tbsig_get","text":"","code":"tbsig_get(d)"},{"path":"https://amashadihossein.github.io/dpbuild/reference/tbsig_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sha1 signature for a table — tbsig_get","text":"d data.frame","code":""},{"path":"https://amashadihossein.github.io/dpbuild/reference/tbsig_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sha1 signature for a table — tbsig_get","text":"tbsig character string","code":""},{"path":"https://amashadihossein.github.io/dpbuild/news/index.html","id":"dpbuild-020","dir":"Changelog","previous_headings":"","what":"dpbuild 0.2.0","title":"dpbuild 0.2.0","text":"Added back support LabKey boards (#86). pinsLabkey now required work LabKey boards Update default gitignore used dp_init() include .RData well common files (#84).","code":""},{"path":[]},{"path":"https://amashadihossein.github.io/dpbuild/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"dpbuild 0.1.0","text":"dpbuild now requires pins >= v1.2.0. means data products now use v1 api older data products incompatible dpbuild >= 0.1.0. Quite changes hood, users see minimal changes workflow. LabKey functionality temporarily removed pins v1 can extended support LabKey boards","code":""},{"path":"https://amashadihossein.github.io/dpbuild/news/index.html","id":"other-improvments-0-1-0","dir":"Changelog","previous_headings":"","what":"Other improvments","title":"dpbuild 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
